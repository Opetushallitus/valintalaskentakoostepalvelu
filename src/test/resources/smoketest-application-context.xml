<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs-client="http://cxf.apache.org/jaxrs-client" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:http="http://cxf.apache.org/transports/http/configuration"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security.xsd
           http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
           http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
           http://cxf.apache.org/jaxrs-client http://cxf.apache.org/schemas/jaxrs-client.xsd
           http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
           http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<ctx:annotation-config />

  <import resource="classpath:META-INF/cxf/cxf.xml" />
  <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

  <sec:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>

  <sec:http use-expressions="true">
    <sec:http-basic/>
    <sec:intercept-url pattern="/" access="permitAll"/>
    <sec:intercept-url pattern="/index.html" access="permitAll"/>
    <sec:intercept-url pattern="/META-INF" access="permitAll"/>
  </sec:http>
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider>
            <sec:user-service>
                <sec:user name="joe" password="bloggs" authorities="ROLE_USER, ROLE_ADMIN"/>
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>

  <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
      <beans:constructor-arg>
          <beans:list>
              <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
          </beans:list>
      </beans:constructor-arg>
      <beans:property name="allowIfAllAbstainDecisions" value="true"/>
  </beans:bean>

  <!-- Swagger -->
  <!-- Swagger API listing resource -->
  <bean id="swaggerResourceJSON"
        class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON" />

  <!-- Swagger writers -->
  <bean id="resourceWriter"
        class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider"
        scope="singleton" />
  <bean id="apiWriter"
        class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider"
        scope="singleton" />

  <!-- Swagger configuration -->
  <bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
    <property name="resourcePackage" value="fi.vm.sade.valinta.kooste" />
    <property name="version" value="1.0" />
    <property name="filterClass" value="fi.vm.sade.valinta.kooste.swagger.AsyncResponseFilter"/>

    <property name="title" value="Swagger API documentation" />
    <property name="scan" value="true" />
  </bean>
  <bean id="SmoketestResource" class="fi.vm.sade.valinta.kooste.test.SmoketestResource"/>

  <bean id="jsonProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider" />
  <bean id="cors-filter" class="fi.vm.sade.valinta.kooste.filter.CorsResponseFilter"/>
  <jaxrs:server id="koostepalveluResurssit">
    <jaxrs:serviceBeans>
      <ref bean="SmoketestResource"/>
    </jaxrs:serviceBeans>
    <jaxrs:providers>
      <ref bean="jsonProvider"/>
      <ref bean="cors-filter"/>
      <ref bean="resourceWriter"/>
      <ref bean="apiWriter"/>
    </jaxrs:providers>
  </jaxrs:server>

</beans>
