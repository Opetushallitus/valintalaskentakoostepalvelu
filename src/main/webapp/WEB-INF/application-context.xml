<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ctx="http://www.springframework.org/schema/context"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:camel="http://camel.apache.org/schema/spring" 
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		   http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
           http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security.xsd
           http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
           http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
           http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd">

    <ctx:annotation-config/>

    <ctx:property-placeholder
            location="classpath:META-INF/kela.properties, classpath:META-INF/valintalaskentakoostepalvelu.properties, classpath:META-INF/hakuparametrit.properties, file:///${user.home:''}/oph-configuration/common.properties, file:///${user.home:''}/oph-configuration/valinta.properties, file:///${user.home:''}/oph-configuration/valintalaskentakoostepalvelu.properties, file:///${user.home:''}/oph-configuration/hakuparametrit.properties, file:///${user.home:''}/oph-configuration/override.properties"
            ignore-resource-not-found="true" properties-ref="defaultProps"/>
	
	

    <bean id="defaultProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <util:properties local-override="true">
                <prop key="cas_mode">front</prop>
                <prop key="cas_key">valintalaskentakoostepalvelu</prop>
                <prop key="cas_service">${cas.service.valintalaskentakoostepalvelu}</prop>
                <prop key="spring_security_default_access">isAuthenticated()</prop>
            </util:properties>
        </property>
    </bean>
    <import resource="file:///${user.home:''}/oph-configuration/security-context-backend.xml"/>

    <!-- AUTHENTICATION / AUTHORIZATION SUPPORT -->
    <!--<import resource="classpath:authentication-client.xml"/>-->
    <bean id="ticketInterceptor" class="fi.vm.sade.generic.ui.portlet.security.SecurityTicketOutInterceptor"/>
    <bean id="ticketInterceptorRest" class="fi.vm.sade.generic.ui.portlet.security.SecurityTicketOutInterceptorRest"/>
    <bean id="securityPreprocessor" class="fi.vm.sade.valinta.kooste.security.SecurityPreprocessor"/>

    <authorizationPolicy id="admin" access="isAuthenticated()"
                         authenticationManager="authenticationManager"
                         accessDecisionManager="accessDecisionManager"
                         xmlns="http://camel.apache.org/schema/spring-security"/>

    
    <!--fetching valintatieto takes ages, consider removing this once valinnan tulokset service has been optimized-->
    <http:conduit name="*.http-conduit">
        <!-- AllowChunking="false" Nginx fails without this -->
        <http:client Connection="Keep-Alive" ConnectionTimeout="0" ReceiveTimeout="0" AllowChunking="false"/>
    </http:conduit>

    <bean id="jacksonMapper" class="org.codehaus.jackson.map.ObjectMapper"/>
    
    <jaxrs:client id="viestintapalveluClient"
    			  name="ViestintapalveluRestClient"
                  serviceClass="fi.vm.sade.valinta.kooste.viestintapalvelu.resource.ViestintapalveluResource"
                  address="${valintalaskentakoostepalvelu.viestintapalvelu.url}">
        <jaxrs:providers>
	        <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider">
	            <property name="mapper" ref="jacksonMapper" />
	        </bean>
        </jaxrs:providers>
    </jaxrs:client>
    

    <jaxws:client id="ValintaperusteServiceClient"
                  serviceClass="fi.vm.sade.service.valintaperusteet.ValintaperusteService"
                  address="${valintalaskentakoostepalvelu.valintaperusteService.url}">
        <jaxws:outInterceptors>
            <bean class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
                <property name="webCasUrl" value="${web.url.cas}"/>
                <property name="targetService"
                          value="${cas.service.valintaperusteet-service}/j_spring_cas_security_check"/>
                <property name="appClientUsername"
                          value="${valintalaskentakoostepalvelu.app.username.to.valintaperusteet}"/>
                <property name="appClientPassword"
                          value="${valintalaskentakoostepalvelu.app.password.to.valintaperusteet}"/>
            </bean>
        </jaxws:outInterceptors>
    </jaxws:client>

    <jaxrs:client id="HakemusServiceRestClientAsAdmin"
                  address="${valintalaskentakoostepalvelu.hakemus.rest.url}"
                  serviceClass="fi.vm.sade.valinta.kooste.external.resource.haku.ApplicationResource"
                  inheritHeaders="true">
        <jaxrs:outInterceptors>
            <bean class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
                <property name="webCasUrl" value="${web.url.cas}"/>
                <property name="targetService"
                          value="${cas.service.haku-service}/j_spring_cas_security_check"/>
                <property name="appClientUsername" value="${valintalaskentakoostepalvelu.app.username.to.haku}"/>
                <property name="appClientPassword" value="${valintalaskentakoostepalvelu.app.password.to.haku}"/>
            </bean>
        </jaxrs:outInterceptors>
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.valinta.kooste.ObjectMapperProvider" />
        </jaxrs:providers>
    </jaxrs:client>
    
	<jaxrs:client id="dokumenttipalveluRestClient"
                  address="${valintalaskentakoostepalvelu.dokumenttipalvelu.rest.url}"
                  serviceClass="fi.vm.sade.valinta.dokumenttipalvelu.resource.DokumenttiResource"
                  inheritHeaders="true">
        <jaxrs:outInterceptors>
            <ref bean="ticketInterceptorRest"/>
        </jaxrs:outInterceptors>
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.valinta.kooste.ObjectMapperProvider" />
        </jaxrs:providers>
    </jaxrs:client>
    <jaxrs:client id="TarjontaServiceRestClient"
                  address="${valintalaskentakoostepalvelu.tarjonta.rest.url}"
                  serviceClass="fi.vm.sade.tarjonta.service.resources.HakukohdeResource"
                  inheritHeaders="true">
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.valinta.kooste.ObjectMapperProvider" />
        </jaxrs:providers>
    </jaxrs:client>
	<jaxrs:client id="TarjontaHakuResourceRestClient"
                  address="${valintalaskentakoostepalvelu.tarjonta.rest.url}"
                  serviceClass="fi.vm.sade.tarjonta.service.resources.HakuResource"
                  inheritHeaders="true">
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.valinta.kooste.ObjectMapperProvider" />
        </jaxrs:providers>
    </jaxrs:client>
    <jaxrs:client id="sijoitteluTilaServiceRestClient"
                  address="${valintalaskentakoostepalvelu.sijoittelu.rest.url}"
                  serviceClass="fi.vm.sade.valinta.kooste.sijoittelu.resource.TilaResource"
                  inheritHeaders="true">
        <jaxrs:outInterceptors>
            <ref bean="ticketInterceptorRest"/>
        </jaxrs:outInterceptors>
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.valinta.kooste.ObjectMapperProvider" />
        </jaxrs:providers>
    </jaxrs:client>
    <jaxrs:client id="SijoitteluServiceRestClient"
                  address="${valintalaskentakoostepalvelu.sijoittelu.rest.url}"
                  serviceClass="fi.vm.sade.sijoittelu.tulos.resource.SijoitteluResource"
                  inheritHeaders="true">
        <jaxrs:outInterceptors>
            <ref bean="ticketInterceptorRest"/>
        </jaxrs:outInterceptors>
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.valinta.kooste.ObjectMapperProvider" />
        </jaxrs:providers>
    </jaxrs:client>
    <jaxrs:client id="ValintalaskentaServiceRestClient"
                  address="${valintalaskentakoostepalvelu.valintalaskenta.rest.url}"
                  serviceClass="fi.vm.sade.valinta.kooste.external.resource.laskenta.HakukohdeResource"
                  inheritHeaders="true">
        <jaxrs:outInterceptors>
            <ref bean="ticketInterceptorRest"/>
        </jaxrs:outInterceptors>
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.valinta.kooste.ObjectMapperProvider" />
        </jaxrs:providers>
    </jaxrs:client>
    <!-- fi.vm.sade.organisaatio.resource.OrganisaatioResource vai fi.vm.sade.valinta.kooste.tarjonta-->
    <jaxrs:client id="OrganisaatioResourceClient"
                  address="${valintalaskentakoostepalvelu.organisaatioService.rest.url}"
                  serviceClass="fi.vm.sade.valinta.kooste.tarjonta.OrganisaatioResource"
                  inheritHeaders="true">
        <jaxrs:outInterceptors>
            <ref bean="ticketInterceptorRest"/>
        </jaxrs:outInterceptors>
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.valinta.kooste.ObjectMapperProvider" />
        </jaxrs:providers>
    </jaxrs:client>


    <jaxws:client id="ValintalaskentaServiceClient"
                  serviceClass="fi.vm.sade.service.valintalaskenta.ValintalaskentaService"
                  address="${valintalaskentakoostepalvelu.valintalaskentaService.url}">
        <jaxws:outInterceptors>
            <ref bean="ticketInterceptor"/>
        </jaxws:outInterceptors>
    </jaxws:client>

    <jaxws:client id="tarjontaServiceClient"
                  serviceClass="fi.vm.sade.tarjonta.service.TarjontaPublicService"
                  address="${valintalaskentakoostepalvelu.tarjontaService.url}">
        <jaxws:outInterceptors>
            <bean class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
                <property name="webCasUrl" value="${web.url.cas}"/>
                <property name="targetService"
                          value="${cas.service.tarjonta-service}/j_spring_cas_security_check"/>
                <property name="appClientUsername" value="${valintalaskentakoostepalvelu.app.username.to.tarjonta}"/>
                <property name="appClientPassword" value="${valintalaskentakoostepalvelu.app.password.to.tarjonta}"/>
            </bean>
        </jaxws:outInterceptors>
    </jaxws:client>

    <jaxws:client id="valintatietoService"
                  serviceClass="fi.vm.sade.service.valintatiedot.ValintatietoService"
                  address="${valintalaskentakoostepalvelu.valintaTulosService.url}">
        <jaxws:outInterceptors>
            <ref bean="ticketInterceptor"/>
        </jaxws:outInterceptors>
    </jaxws:client>

    <jaxws:client id="sijoitteluService"
                  serviceClass="fi.vm.sade.service.sijoittelu.SijoitteluService"
                  address="${valintalaskentakoostepalvelu.sijoitteluService.url}">
        <jaxws:outInterceptors>
            <ref bean="ticketInterceptor"/>
        </jaxws:outInterceptors>
    </jaxws:client>

    <jaxws:client id="valintatietoServiceAsAdmin"
                  serviceClass="fi.vm.sade.service.valintatiedot.ValintatietoService"
                  address="${valintalaskentakoostepalvelu.valintaTulosService.url}">
        <jaxws:outInterceptors>
            <bean class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
                <property name="webCasUrl" value="${web.url.cas}"/>
                <property name="targetService"
                          value="${cas.service.valintalaskenta-service}/j_spring_cas_security_check"/>
                <property name="appClientUsername"
                          value="${valintalaskentakoostepalvelu.app.username.to.valintatieto}"/>
                <property name="appClientPassword"
                          value="${valintalaskentakoostepalvelu.app.password.to.valintatieto}"/>
            </bean>
        </jaxws:outInterceptors>
    </jaxws:client>


    <jaxws:client id="sijoitteluServiceAsAdmin"
                  serviceClass="fi.vm.sade.service.sijoittelu.SijoitteluService"
                  address="${valintalaskentakoostepalvelu.sijoitteluService.url}">
        <jaxws:outInterceptors>
            <bean class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
                <property name="webCasUrl" value="${web.url.cas}"/>
                <property name="targetService"
                          value="${cas.service.sijoittelu-service}/j_spring_cas_security_check"/>
                <property name="appClientUsername" value="${valintalaskentakoostepalvelu.app.username.to.sijoittelu}"/>
                <property name="appClientPassword" value="${valintalaskentakoostepalvelu.app.password.to.sijoittelu}"/>
            </bean>
        </jaxws:outInterceptors>
    </jaxws:client>

    <jaxws:client id="koodiService"
                  serviceClass="fi.vm.sade.koodisto.service.KoodiService"
                  address="${valintalaskentakoostepalvelu.koodiService.url}">
        <jaxws:outInterceptors>
            <bean class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
                <property name="webCasUrl" value="${web.url.cas}"/>
                <property name="targetService"
                          value="${cas.service.koodisto-service}/j_spring_cas_security_check"/>
                <property name="appClientUsername" value="${valintalaskentakoostepalvelu.app.username.to.koodisto}"/>
                <property name="appClientPassword" value="${valintalaskentakoostepalvelu.app.password.to.koodisto}"/>
            </bean>
        </jaxws:outInterceptors>
    </jaxws:client>
	
	<bean id="redeliveryPolicy" class="org.apache.camel.processor.RedeliveryPolicy">
		<property name="maximumRedeliveries" value="5" />
		<property name="redeliveryDelay" value="25" />
		<property name="retryAttemptedLogLevel" value="ERROR" />
	</bean>
	
	<beans:import resource="classpath:META-INF/spring/context/valintatieto-context.xml"/>
    <beans:import resource="classpath:META-INF/spring/context/tarjonta-context.xml"/>
    <beans:import resource="classpath:META-INF/spring/context/valintalaskenta-excel-context.xml"/>
    <beans:import resource="classpath:META-INF/spring/context/sijoittelu-context.xml"/>
    <!-- Parametrit -->
    <bean class="fi.vm.sade.valinta.kooste.parametrit.resource.ParametritResource" />
    <bean class="fi.vm.sade.valinta.kooste.parametrit.service.impl.ParametriServiceImpl" />
    <bean id="parametrit" class="fi.vm.sade.valinta.kooste.parametrit.Parametrit">
        <!--<property name="valintakoekutsutAlkupvm" value="${valintakoekutsut.alkupvm}"/>
        <property name="valintakoekutsutLoppupvm" value="${valintakoekutsut.loppupvm}"/>
        <property name="valintakoekutsutkouluillePvm" value="${valintakoekutsutkouluille.pvm}"/>
        <property name="valintakoeAlkupvm" value="${valintakoe.alkupvm}"/>
        <property name="valintakoeLoppupvm" value="${valintakoe.loppupvm}"/>-->
        <property name="koetuloksetAlkupvm" value="${koetulokset.alkupvm}"/>
        <property name="koetuloksetLoppupvm" value="${koetulokset.loppupvm}"/>
        <!--<property name="valintajasijoitteluAlkupvm" value="${valintajasijoittelu.alkupvm}"/>
        <property name="valintajasijoitteluLoppupvm" value="${valintajasijoittelu.loppupvm}"/>-->
        <property name="valintaesitysPvm" value="${valintaesitys.pvm}"/>
        <property name="hakuAlkupvm" value="${haku.alkupvm}" />
        <property name="hakuLoppupvm" value="${haku.loppupvm}" />
    </bean>
	<!--
		Valintalaskenta
	 -->
	<bean class="fi.vm.sade.valinta.kooste.valintalaskenta.resource.ValintalaskentaAktivointiResource"/>
	<bean name="suoritaLaskentaKomponentti" class="fi.vm.sade.valinta.kooste.valintalaskenta.komponentti.SuoritaLaskentaKomponentti"/>
	<bean name="haeValintaperusteetKomponentti" class="fi.vm.sade.valinta.kooste.valintalaskenta.komponentti.HaeValintaperusteetKomponentti"/>
	<bean name="valintalaskentaKomponentti" class="fi.vm.sade.valinta.kooste.valintalaskenta.komponentti.ValintalaskentaKomponentti"/>
	<bean name="valintaperusteKomponentti" class="fi.vm.sade.valinta.kooste.valintalaskenta.komponentti.ValintaperusteKomponentti"/>
	<bean class="fi.vm.sade.valinta.kooste.valintalaskenta.route.impl.ValintalaskentaConfig"/>
	<bean class="fi.vm.sade.valinta.kooste.valintalaskenta.route.impl.ValintalaskentaRouteImpl"/>
    <ctx:component-scan base-package="fi.vm.sade.valinta.kooste.tarjonta.komponentti"/>
    <ctx:component-scan base-package="fi.vm.sade.valinta.kooste.hakemus"/>
	<!--
		Viestintapalvelu 
	 -->
	<bean class="fi.vm.sade.valinta.kooste.viestintapalvelu.resource.ViestintapalveluAktivointiResource"/>
    <ctx:component-scan base-package="fi.vm.sade.valinta.kooste.viestintapalvelu.komponentti"/>
    <ctx:component-scan base-package="fi.vm.sade.valinta.kooste.viestintapalvelu.route.impl"/>
	<!--
		Valintakoelaskenta 
	 -->
	<bean class="fi.vm.sade.valinta.kooste.valintakokeet.resource.HaunValintakoelaskentaAktivointiResource"/>
	<ctx:component-scan base-package="fi.vm.sade.valinta.kooste.valintakokeet.route.impl"/>
	<ctx:component-scan base-package="fi.vm.sade.valinta.kooste.valintakokeet.komponentti"/>
	
	<!--
		Kela Export
	 -->
	<bean class="fi.vm.sade.valinta.kooste.KoostepalveluContext"/>
	<bean class="fi.vm.sade.valinta.kooste.kela.route.impl.KelaRouteConfig"/>
	<ctx:component-scan base-package="fi.vm.sade.valinta.kooste.kela.resource"/>
	<ctx:component-scan base-package="fi.vm.sade.valinta.kooste.kela.route.impl"/>
	<ctx:component-scan base-package="fi.vm.sade.valinta.kooste.kela.komponentti.impl"/>
	<ctx:component-scan base-package="fi.vm.sade.valinta.kooste.dokumenttipalvelu"/>
	
	<!--
		Haku Import 
	 -->
	<bean class="fi.vm.sade.valinta.kooste.hakuimport.komponentti.SuoritaHakuImportKomponentti"/>
	<bean class="fi.vm.sade.valinta.kooste.hakuimport.komponentti.SuoritaHakukohdeImportKomponentti"/>
	<bean class="fi.vm.sade.valinta.kooste.hakuimport.resource.HakuImportResource"/>
	<bean class="fi.vm.sade.valinta.kooste.hakuimport.route.impl.HakuImportRouteConfig"/>
	<bean class="fi.vm.sade.valinta.kooste.hakuimport.route.impl.HakuImportRouteImpl"/>
	
	<!-- Swagger -->
	<!-- Swagger API listing resource -->
    <bean id="swaggerResourceJSON" class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON"/>

    <!-- Swagger writers -->
    <bean id="resourceWriter" class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider" scope="singleton"/>
    <bean id="apiWriter" class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider" scope="singleton"/>

    <!-- Swagger configuration -->
    <bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
        <property name="resourcePackage" value="fi.vm.sade.valinta.kooste"/>
        <property name="version" value="1.0"/>
        <property name="basePath" value="${valintalaskentakoostepalvelu.swagger.basepath}"/>

        <property name="title" value="Swagger API documentation"/>
        <property name="scan" value="true"/>
    </bean>
</beans>
